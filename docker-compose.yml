version: '3.4'

services:
  strava-api:
    container_name: strava-api
    image: ${DOCKER_REGISTRY-}strava-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

      - StravaSettings__BaseUrl=https://www.strava.com/api/v3/
      - StravaSettings__ClientId=${STRAVA_CLIENT_ID:?Strava clientId is required. Add it to .env file.}
      - StravaSettings__ClientSecret=${STRAVA_CLIENT_SECRET:?Strava client secret is required. Add it to .env file.}
      - StravaSettings__HubVerifyToken=${STRAVA_HUB_VERIFY_TOKEN:-4VxgKI00hyw2kYWUp5oKC7FN0pSEkgCm} 

      - MessageBrokerSettings__Host=amqp://rabbitmq:5672
      - MessageBrokerSettings__Username=${RABBITMQ_USERNAME:-admin}
      - MessageBrokerSettings__Password=${RABBITMQ_PASSWORD:-admin}
    build:
      context: .
      dockerfile: src/Services/Strava/Strava.Api/Dockerfile
    depends_on:
      - db_server
      - rabbitmq 


  athletes-api:
    container_name: athletes-api
    image: ${DOCKER_REGISTRY-}athletes-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DbConnection=${ATHLETES_SERVICE_DB_CONNECTION_STRING:-Server=db_server;Database=Athletes;User Id=SA;Password=Password_123;TrustServerCertificate=True}

      - MessageBrokerSettings__Host=amqp://rabbitmq:5672
      - MessageBrokerSettings__Username=${RABBITMQ_USERNAME:-admin}
      - MessageBrokerSettings__Password=${RABBITMQ_PASSWORD:-admin}
    build:
      context: .
      dockerfile: src/Services/Athletes/Athletes.Api/Dockerfile
    depends_on:
      - db_server
      - rabbitmq


  activities-api:
    container_name: activities-api
    image: ${DOCKER_REGISTRY-}activities-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DbConnection=${ACTIVITIES_SERVICE_DB_CONNECTION_STRING:-Server=db_server;Database=Activities;User Id=SA;Password=Password_123;TrustServerCertificate=True}

      - MessageBrokerSettings__Host=amqp://rabbitmq:5672
      - MessageBrokerSettings__Username=${RABBITMQ_USERNAME:-admin}
      - MessageBrokerSettings__Password=${RABBITMQ_PASSWORD:-admin}
    build:
      context: .
      dockerfile: src/Services/Activities/Activities.Api/Dockerfile
    depends_on:
      - db_server
      - rabbitmq


  tiles-api:
    container_name: tiles-api
    image: ${DOCKER_REGISTRY-}tiles-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DbConnection=${TILES_SERVICE_DB_CONNECTION_STRING:-Server=db_server;Database=Tiles;User Id=SA;Password=Password_123;TrustServerCertificate=True}

      - MessageBrokerSettings__Host=amqp://rabbitmq:5672
      - MessageBrokerSettings__Username=${RABBITMQ_USERNAME:-admin}
      - MessageBrokerSettings__Password=${RABBITMQ_PASSWORD:-admin}
    build:
      context: .
      dockerfile: src/Services/Tiles/Tiles.Api/Dockerfile
    depends_on:
      - db_server
      - rabbitmq


  auth-api:
    container_name: auth-api
    image: ${DOCKER_REGISTRY-}auth-api
    environment:
        - ASPNETCORE_ENVIRONMENT=Development
        - ConnectionStrings__DbConnection=${AUTH_SERVICE_DB_CONNECTION_STRING:-Server=db_server;Database=Auth;User Id=SA;Password=Password_123;TrustServerCertificate=True}

        - TokenSettings__Key=${TOKEN_KEY:-1n6wET70nCfhq8VPz9vWqSQxLg85vxq4pcKMbdcFMGvgVy25rUBcEgjBwvKUbJ9U}
        - TokenSettings__Issuer=${TOKEN_ISSUER:-http://localhost:5000}
        - TokenSettings__ExpiresInMinutes=${TOKEN_EXPIRES_IN_MINUTES:-20}

        - MessageBrokerSettings__Host=amqp://rabbitmq:5672
        - MessageBrokerSettings__Username=${RABBITMQ_USERNAME:-admin}
        - MessageBrokerSettings__Password=${RABBITMQ_PASSWORD:-admin}
    build:
        context: .
        dockerfile: src/Services/Auth/Auth.Api/Dockerfile
    depends_on:
        - db_server
        - rabbitmq


  gateway-api:
    container_name: gateway-api
    image: ${DOCKER_REGISTRY-}gateway-api
    ports:
      - "5000:80"
      - "5001:433"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - AllowOrigin=${ALLOW_ORIGIN:-http://localhost:3000}

      - TokenSettings__Key=${TOKEN_KEY:-1n6wET70nCfhq8VPz9vWqSQxLg85vxq4pcKMbdcFMGvgVy25rUBcEgjBwvKUbJ9U}
      - TokenSettings__Issuer=${TOKEN_ISSUER:-http://localhost:5000}
      - TokenSettings__ExpiresInMinutes=${TOKEN_EXPIRES_IN_MINUTES:-20}
    build:
      context: .
      dockerfile: src/Gateway/Gateway.Api/Dockerfile


  db_server:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - 1433:1433
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${DB_PASSWORD:-Password_123}


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME:-admin}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-admin}
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq